
package cn.howardliu.demo.ws.crm;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "n_frdifSoap", targetNamespace = "http://tempurl.org")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NFrdifSoap {


    /**
     * 
     * @param inputpara
     * @param password
     * @param cmdid
     * @param processdataResult
     * @param userid
     * @param rtn
     * @param outputpara
     * @param errormsg
     */
    @WebMethod(action = "http://tempurl.org/processdata")
    @RequestWrapper(localName = "processdata", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.Processdata")
    @ResponseWrapper(localName = "processdataResponse", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.ProcessdataResponse")
    public void processdata(
        @WebParam(name = "userid", targetNamespace = "http://tempurl.org")
        String userid,
        @WebParam(name = "password", targetNamespace = "http://tempurl.org")
        String password,
        @WebParam(name = "cmdid", targetNamespace = "http://tempurl.org")
        String cmdid,
        @WebParam(name = "inputpara", targetNamespace = "http://tempurl.org")
        String inputpara,
        @WebParam(name = "outputpara", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<String> outputpara,
        @WebParam(name = "rtn", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<Integer> rtn,
        @WebParam(name = "errormsg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<String> errormsg,
        @WebParam(name = "processdataResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
        Holder<Short> processdataResult);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempurl.org/testconnect")
    @WebResult(name = "testconnectResult", targetNamespace = "http://tempurl.org")
    @RequestWrapper(localName = "testconnect", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.Testconnect")
    @ResponseWrapper(localName = "testconnectResponse", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.TestconnectResponse")
    public String testconnect();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempurl.org/getversion")
    @WebResult(name = "getversionResult", targetNamespace = "http://tempurl.org")
    @RequestWrapper(localName = "getversion", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.Getversion")
    @ResponseWrapper(localName = "getversionResponse", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.GetversionResponse")
    public String getversion();

    /**
     * 
     * @param password
     * @param testconnectuserResult
     * @param userid
     * @param rtn
     * @param errormsg
     */
    @WebMethod(action = "http://tempurl.org/testconnectuser")
    @RequestWrapper(localName = "testconnectuser", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.Testconnectuser")
    @ResponseWrapper(localName = "testconnectuserResponse", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.TestconnectuserResponse")
    public void testconnectuser(
        @WebParam(name = "userid", targetNamespace = "http://tempurl.org")
        String userid,
        @WebParam(name = "password", targetNamespace = "http://tempurl.org")
        String password,
        @WebParam(name = "rtn", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<Integer> rtn,
        @WebParam(name = "errormsg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<String> errormsg,
        @WebParam(name = "testconnectuserResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
        Holder<Short> testconnectuserResult);

    /**
     * 
     * @param password
     * @param agentid
     * @param getagentconfigResult
     * @param configinfo
     * @param storeid
     * @param userid
     * @param rtn
     * @param errormsg
     * @param token
     */
    @WebMethod(action = "http://tempurl.org/getagentconfig")
    @RequestWrapper(localName = "getagentconfig", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.Getagentconfig")
    @ResponseWrapper(localName = "getagentconfigResponse", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.GetagentconfigResponse")
    public void getagentconfig(
        @WebParam(name = "userid", targetNamespace = "http://tempurl.org")
        String userid,
        @WebParam(name = "password", targetNamespace = "http://tempurl.org")
        String password,
        @WebParam(name = "storeid", targetNamespace = "http://tempurl.org")
        String storeid,
        @WebParam(name = "agentid", targetNamespace = "http://tempurl.org")
        String agentid,
        @WebParam(name = "token", targetNamespace = "http://tempurl.org")
        String token,
        @WebParam(name = "rtn", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<Short> rtn,
        @WebParam(name = "errormsg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<String> errormsg,
        @WebParam(name = "configinfo", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<String> configinfo,
        @WebParam(name = "getagentconfigResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
        Holder<Short> getagentconfigResult);

    /**
     * 
     * @param password
     * @param agentid
     * @param loginfo
     * @param storeid
     * @param userid
     * @param rtn
     * @param sendagentlogResult
     * @param errormsg
     * @param token
     */
    @WebMethod(action = "http://tempurl.org/sendagentlog")
    @RequestWrapper(localName = "sendagentlog", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.Sendagentlog")
    @ResponseWrapper(localName = "sendagentlogResponse", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.SendagentlogResponse")
    public void sendagentlog(
        @WebParam(name = "userid", targetNamespace = "http://tempurl.org")
        String userid,
        @WebParam(name = "password", targetNamespace = "http://tempurl.org")
        String password,
        @WebParam(name = "storeid", targetNamespace = "http://tempurl.org")
        String storeid,
        @WebParam(name = "agentid", targetNamespace = "http://tempurl.org")
        String agentid,
        @WebParam(name = "token", targetNamespace = "http://tempurl.org")
        String token,
        @WebParam(name = "loginfo", targetNamespace = "http://tempurl.org")
        String loginfo,
        @WebParam(name = "rtn", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<Short> rtn,
        @WebParam(name = "errormsg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<String> errormsg,
        @WebParam(name = "sendagentlogResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
        Holder<Short> sendagentlogResult);

    /**
     * 
     * @param password
     * @param agentid
     * @param lasttoken
     * @param checkagentResult
     * @param storeid
     * @param userid
     * @param rtn
     * @param errormsg
     * @param lastdate
     */
    @WebMethod(action = "http://tempurl.org/checkagent")
    @RequestWrapper(localName = "checkagent", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.Checkagent")
    @ResponseWrapper(localName = "checkagentResponse", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.CheckagentResponse")
    public void checkagent(
        @WebParam(name = "userid", targetNamespace = "http://tempurl.org")
        String userid,
        @WebParam(name = "password", targetNamespace = "http://tempurl.org")
        String password,
        @WebParam(name = "storeid", targetNamespace = "http://tempurl.org")
        String storeid,
        @WebParam(name = "agentid", targetNamespace = "http://tempurl.org")
        String agentid,
        @WebParam(name = "rtn", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<Short> rtn,
        @WebParam(name = "errormsg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<String> errormsg,
        @WebParam(name = "lastdate", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<String> lastdate,
        @WebParam(name = "lasttoken", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<String> lasttoken,
        @WebParam(name = "checkagentResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
        Holder<Short> checkagentResult);

    /**
     * 
     * @param msg
     * @param datasyncResult
     * @param queuename
     * @param queuedata
     * @param access
     */
    @WebMethod(action = "http://tempurl.org/datasync")
    @RequestWrapper(localName = "datasync", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.Datasync")
    @ResponseWrapper(localName = "datasyncResponse", targetNamespace = "http://tempurl.org", className = "cn.howardliu.demo.ws.crm.DatasyncResponse")
    public void datasync(
        @WebParam(name = "queuename", targetNamespace = "http://tempurl.org")
        String queuename,
        @WebParam(name = "queuedata", targetNamespace = "http://tempurl.org")
        String queuedata,
        @WebParam(name = "access", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<Boolean> access,
        @WebParam(name = "msg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
        Holder<String> msg,
        @WebParam(name = "datasyncResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
        Holder<Short> datasyncResult);

}
